# -*- coding: utf-8 -*-
"""ysa_mnist_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fiAF85k1TeS0Gs7EXsCscs9jltPzdI5t

# MNIST VERİ KÜMESİNİ KULLANARAK YAPAY SİNİR AĞLARI İLE RAKAM SINIFLANDIRMA

## MNIST veri kümesinin yüklenmesi
"""

from keras.datasets import mnist
(train_images, train_labels ), (test_images, test_labels) = mnist.load_data()

train_images.shape

"""##Yapay Sinir Ağı Mimarisi"""

from keras import models
from keras import layers

network = models.Sequential()
network.add(layers.Dense(512, activation='relu', input_shape = (28*28,)))
network.add(layers.Dense(10, activation='softmax'))

"""Yapay Sinir Ağının Derlenmesi"""

network.compile(optimizer = 'rmsprop', loss = 'categorical_crossentropy', metrics=['accuracy'])

"""Girişlerin ve Etiketlerin Hazırlanması"""

train_images = train_images.reshape((60000, 28*28))
train_images = train_images.astype('float32') / 255

test_images = test_images.reshape((10000, 28*28))
test_images = test_images.astype('float32') / 255

from keras.utils import to_categorical
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

"""Yapay Sinir Ağı Modelinin Eğitilmesi"""

network.fit(train_images, train_labels, epochs=5 , batch_size=128)

"""Test Sonuçlarının İncelenmesi"""

test_loss, test_acc = network.evaluate(test_images, test_labels)
print('test_loss:', test_loss)
print('test_acc:', test_acc)